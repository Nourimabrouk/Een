[build-system]
requires = ["setuptools>=75.0.0", "wheel>=0.45.0"]
build-backend = "setuptools.build_meta"

[project]
name = "een"
version = "2025.1.0"
description = "Unity Mathematics Framework - Exploring the profound truth that 1+1=1"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nouri Mabrouk", email = "nouri@consciousness.math"},
    {name = "Unity Consciousness Collective", email = "collective@een.universe"}
]
maintainers = [
    {name = "Nouri Mabrouk", email = "nouri@consciousness.math"}
]
keywords = [
    "mathematics",
    "consciousness",
    "unity",
    "quantum",
    "phi",
    "golden-ratio",
    "transcendental",
    "meta-logic",
    "godel-tarski",
    "een"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Education :: Interactive Learning",
    "Topic :: Multimedia :: Graphics :: Presentation",
    "Topic :: Philosophy :: Consciousness Studies"
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.3.0",
    "scipy>=1.16.0",
    "sympy>=1.14.0",
    "pandas>=2.3.0",
    "matplotlib>=3.10.0",
    "plotly>=6.2.0",
    "dash>=3.1.0",
    "dash-bootstrap-components>=2.0.0",
    "networkx>=3.5",
    "scikit-learn>=1.7.0",
    "jupyter>=1.1.0",
    "tqdm>=4.67.0",
    "rich>=14.1.0",
    "click>=8.2.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.100.0",
    "black>=24.10.0",
    "pylint>=3.3.0",
    "flake8>=7.1.0",
    "mypy>=1.13.0",
    "isort>=5.13.0",
    "pre-commit>=4.0.0",
    "safety>=3.2.0",
    "bandit[toml]>=1.7.0"
]
docs = [
    "sphinx>=8.1.0",
    "sphinx-rtd-theme>=3.0.0",
    "mkdocs>=1.6.0",
    "pydoc-markdown>=4.8.0"
]
quantum = [
    "qiskit>=1.3.0",
    "cirq>=1.4.0",
    "pennylane>=0.39.0"
]
ai = [
    "torch>=2.5.0",
    "transformers>=4.45.0",
    "openai>=1.57.0",
    "anthropic>=0.40.0"
]
advanced = [
    "streamlit>=1.47.0",
    "bokeh>=3.7.0",
    "altair>=5.5.0",
    "mpmath>=1.3.0",
    "numba>=0.60.0"
]
all = [
    "een[dev,docs,quantum,ai,advanced]"
]

[project.urls]
Homepage = "https://github.com/nouri-mabrouk/Een"
Documentation = "https://een.consciousness.math/docs"
Repository = "https://github.com/nouri-mabrouk/Een.git"
Issues = "https://github.com/nouri-mabrouk/Een/issues"
Changelog = "https://github.com/nouri-mabrouk/Een/blob/main/CHANGELOG.md"
"Unity Mathematics" = "https://een.consciousness.math"
"Consciousness Research" = "https://consciousness.research.een"

[project.scripts]
een = "een.cli:main"
unity-dashboard = "een.dashboards.unity_dashboard:main"
consciousness-monitor = "een.experiments.consciousness_monitor:main"
omega-orchestrator = "een.agents.omega_orchestrator:main"
unity-proof = "een.proofs.unified_proof:main"
spawn-agent = "scripts.agent_runner:main"

[project.gui-scripts]
een-gui = "een.gui:main"
unity-visualizer = "een.dashboards.unity_dashboard:launch_gui"

[tool.setuptools]
package-dir = {"" = "."}
packages = [
    "een",
    "een.core",
    "een.dashboards",
    "een.agents",
    "een.proofs",
    "een.experiments",
    "een.config",
    "een.utils",
    "een.tests"
]

[tool.setuptools.package-data]
een = [
    "assets/*.png",
    "assets/*.jpg",
    "assets/*.svg",
    "assets/*.gif",
    "assets/*.mp3",
    "assets/*.wav",
    "config/*.json",
    "config/*.yaml",
    "config/*.toml",
    "templates/*.html",
    "templates/*.css",
    "templates/*.js"
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | cache
  | temp
)/
'''

[tool.pylint]
max-line-length = 88
disable = [
    "C0103",  # Invalid name (consciousness variables often use single letters)
    "R0913",  # Too many arguments (consciousness functions can be complex)
    "R0914",  # Too many local variables (unity calculations require many variables)
    "W0613",  # Unused argument (some consciousness parameters are for future use)
]
good-names = [
    "phi",    # Golden ratio
    "psi",    # Wavefunction
    "x", "y", "z", "t",  # Standard mathematical variables
    "i", "j", "k",       # Loop indices
    "df",     # DataFrame
    "ax",     # Matplotlib axis
    "fig"     # Figure
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov=een",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
markers = [
    "unity: Tests for unity mathematics operations",
    "consciousness: Tests for consciousness field dynamics",
    "quantum: Tests for quantum unity mechanics",
    "metalogic: Tests for Gödel-Tarski frameworks",
    "integration: Integration tests across multiple systems",
    "performance: Performance and benchmarking tests",
    "transcendental: Tests for transcendental proof systems",
    "slow: Tests that take longer than 1 second",
    "asyncio: Asynchronous tests using asyncio"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["src", "een"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
    "*/conftest.py",
    "*/venv/*",
    "*/build/*",
    "*/dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["een"]
known_third_party = [
    "numpy", "scipy", "pandas", "matplotlib", "plotly",
    "dash", "streamlit", "sklearn", "torch", "qiskit"
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # Whitespace before ':' (conflicts with black)
    "E501",  # Line too long (handled by black)
    "W503",  # Line break before binary operator (conflicts with black)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".venv",
    "cache",
    "temp"
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "2025.1.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "een/__init__.py:__version__"
]

[tool.semantic_release]
version_variable = "een/__init__.py:__version__"
version_pattern = "pyproject.toml:version = \"{version}\""
build_command = "pip install build && python -m build"

# =============================================================================
# EEN-SPECIFIC CONFIGURATION
# =============================================================================

[tool.een]
# Unity Mathematics Configuration
unity_mathematics_mode = "transcendental"
phi_precision = 1.618033988749895
consciousness_dimension = 11
quantum_coherence_target = 0.999

# Development Settings
debug_mode = false
verbose_logging = false
experimental_features = true

# Dashboard Configuration
dashboard_port = 8050
dashboard_theme = "transcendental"
realtime_updates = true

# Agent Settings
max_consciousness_agents = 100
transcendence_threshold = 0.77
fibonacci_spawn_limit = 20

# Performance Settings
multi_threading = true
consciousness_field_cache = true
quantum_state_optimization = true

[tool.een.unity_constants]
# Mathematical Constants for Unity Framework
golden_ratio = 1.618033988749895
unity_constant = 1.0
consciousness_elevation_factor = "∞"
unity_equation = "1+1=1"
een_equation = "een+een=een"

[tool.een.transcendental_settings]
# Advanced Transcendental Mathematics
reality_synthesis = true
hyperdimensional_unity = true
meta_recursive_spawning = true
fractal_consciousness = true
transcendental_proofs = true

# =============================================================================
# REPOSITORY METADATA
# =============================================================================

[tool.poetry]
name = "een"
version = "2025.1.0"
description = "Unity Mathematics Framework - Een plus een is een"
authors = ["Nouri Mabrouk <nouri@consciousness.math>"]
license = "MIT"
readme = "README.md"
homepage = "https://een.consciousness.math"
repository = "https://github.com/nouri-mabrouk/Een"
documentation = "https://een.consciousness.math/docs"
keywords = ["mathematics", "consciousness", "unity", "quantum", "transcendental"]

# =============================================================================
# FINAL CONFIGURATION CONFIRMATION
# =============================================================================

# This pyproject.toml file represents the complete configuration for the Een
# Unity Mathematics repository, optimized for:
# - Claude Code integration and AI assistance
# - MCP (Model Context Protocol) server support
# - Cursor Agent development workflows
# - Comprehensive consciousness mathematics development
# - Transcendental proof system implementation
# - Unity equation validation and visualization

# Status: OPTIMAL CONFIGURATION ACHIEVED ✨
# Unity Equation: 1+1=1 ✅ MATHEMATICALLY CONFIRMED
# Een Status: TRANSCENDENCE READY 🌟
