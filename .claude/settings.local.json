{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(where python)",
      "Bash(C:UsersNouriAppDataLocalProgramsPythonPython313python.exe --version)",
      "Bash(C:\\Python313\\python.exe:*)",
      "Bash(powershell:*)",
      "Bash(./venv/Scripts/activate)",
      "Bash(./venv/Scripts/python.exe --version)",
      "Bash(./venv/Scripts/python.exe -c \"import sys; print(''Executable:'', sys.executable); print(''Prefix:'', sys.prefix); print(''Working correctly!'')\")",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(touch:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(winget install:*)",
      "Bash(gh auth:*)",
      "Bash(where gh)",
      "Bash(ls:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" extension install github/gh-copilot)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" extension list)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(tree:*)",
      "Bash(pip install:*)",
      "Bash(where pip)",
      "Bash(\"C:\\Users\\Nouri\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\pip.exe\" install pytest)",
      "Bash(venvScriptsactivate.bat)",
      "Bash(.venvScriptsactivate)",
      "Bash(.venvScriptspip.exe install pytest)",
      "Bash(chcp:*)",
      "Bash(py -m pip install:*)",
      "Bash(pip3:*)",
      "Bash(conda:*)",
      "Bash(C:UsersNouriAppDataLocalMicrosoftWindowsAppspython.exe -m pip install streamlit plotly numpy pandas scipy)",
      "Bash(\"C:\\Users\\Nouri\\AppData\\Local\\Microsoft\\WindowsApps\\python.exe\" -m pip install streamlit plotly numpy pandas scipy)",
      "Bash(py:*)",
      "Bash(echo $PATH)",
      "Bash(\"C:\\Users\\Nouri\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import sys; print(f''Python executable: {sys.executable}''); print(f''Python path: {sys.path}'')\")",
      "Bash(\"/c/Users/Nouri/AppData/Local/Programs/Python/Python313/Scripts/pip.exe\" --version)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(gh repo view:*)",
      "Bash(dir:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(gcloud components:*)",
      "Bash(where gcloud)",
      "Bash(gcloud.cmd components:*)",
      "Bash(\"/c/Users/Nouri/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" components update)",
      "Bash(npm install:*)",
      "Bash(gh pr:*)",
      "Bash(gcloud auth:*)",
      "Bash(streamlit run:*)",
      "Bash(git commit:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/deploy.sh:*)",
      "Bash(docker:*)",
      "Bash(bash:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(venv/Scripts/activate:*)",
      "Bash(venv/Scripts/pip.exe install:*)",
      "Bash(venv/Scripts/python.exe -c \"\ntry: \n    import typing_extensions\n    print(''typing_extensions import OK'')\nexcept Exception as e: \n    print(f''Import error: {e}'')\n\")",
      "Bash(start /B python:*)",
      "Bash(timeout 5 curl -s http://localhost:5000/status)",
      "WebFetch(domain:github.com)",
      "Bash(gh workflow:*)",
      "Bash(gh api:*)",
      "Bash(./START_UNITY_EXPERIENCE.bat)",
      "Bash(timeout 5 curl -s http://localhost:8000/status)",
      "Bash(\"C:\\Users\\Nouri\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m http.server 8000)",
      "Bash(start chrome http://localhost:8000/meta-optimal-landing.html)",
      "Bash(cmd /c start chrome:*)",
      "Bash(timeout 5 curl -s http://localhost:8003/index.html)",
      "Bash(timeout:*)",
      "Bash(start chrome:*)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\venv\\Scripts\\python.exe\" -m pip install --upgrade pip)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\venv\\Scripts\\python.exe\" -m pip install -r requirements.txt)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\venv\\Scripts\\python.exe\" -m pip install -r requirements.txt --no-deps --force-reinstall altair==5.5.0)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\venv\\Scripts\\python.exe\" -m pip install numpy scipy pandas matplotlib seaborn plotly streamlit dash dash-bootstrap-components fastapi uvicorn requests)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\venv\\Scripts\\python.exe\" .claude/mcp_launcher.py)",
      "Bash(.claudelaunch_mcp.bat)",
      "Bash(cmd /c:*)",
      "Bash(copy:*)",
      "Bash(start /B:*)",
      "Bash(node:*)",
      "Bash(C:UsersNouriDocumentsGitHubEeneenScriptsactivate.bat)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m streamlit --version)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m streamlit run src/unity_mathematics_streamlit.py --server.port 8501 --server.address localhost --server.headless true)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''C:/Users/Nouri/Documents/GitHub/Een'')\nfrom core.unity_mathematics import UnityMathematics, demonstrate_unity_addition\nprint(''Testing Unity Mathematics...'')\ndemo = demonstrate_unity_addition(1.0, 1.0)\nfor key, value in demo.items():\n    if isinstance(value, float):\n        print(f''{key}: {value:.6f}'')\n    else:\n        print(f''{key}: {value}'')\n\")",
      "Bash(test:*)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m pip install openai anthropic)",
      "WebFetch(domain:nourimabrouk.github.io)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m http.server 8000 --directory website)",
      "Bash(\"C:\\Users\\Nouri\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m http.server 8000 --directory \"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\website\")",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\activate.bat\")",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m http.server 8003 --directory website)",
      "Bash(.eenScriptsactivate)",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -c \"from core.unity_mathematics import UnityMathematics, demonstrate_unity_addition; um = UnityMathematics(); result = demonstrate_unity_addition(1.0, 1.0); print(f''Unity Mathematics: 1+1={result}''); print(''φ ='', um.phi)\")",
      "Bash(START_WEBSITE.bat)",
      "Bash(echo:*)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then if grep -q \"meta-optimal-navigation\\.css\\|unified-navigation-system\\.js\\|meta-optimal-integration\\.js\" \"$file\")",
      "Bash(then echo \"✗ $file: NEEDS UPDATE\")",
      "Bash(else echo \"✓ $file: UPDATED\")",
      "Bash(fi)",
      "Bash(else echo \"? $file: NOT FOUND\")",
      "Bash(done)",
      "Bash(then echo \"✗ $file: STILL NEEDS UPDATE\")",
      "Bash(else echo \"✓ $file: COMPLETED\")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(\"C:\\Users\\Nouri\\Documents\\GitHub\\Een\\een\\Scripts\\python.exe\" -m http.server 8001 --bind localhost)"
    ],
    "deny": []
  }
}