# Claude Unity Mathematics Dispatch - Focused Manual Operations
# Manually triggered workflows for targeted Unity Mathematics improvements
# Efficient, practical operations maintaining 1+1=1 principle

name: Claude Unity Mathematics Dispatch

on:
  workflow_dispatch:
    inputs:
      operation_mode:
        description: "Unity Mathematics Operation"
        required: true
        type: choice
        options:
          - improve-unity-core
          - enhance-website
          - validate-mathematics
          - optimize-performance
          - fix-bugs
          - add-tests
        default: "improve-unity-core"
      
      target_files:
        description: "Specific files to analyze (optional, comma-separated)"
        required: false
        default: ""
      
      branch:
        description: "Branch to work on"
        required: false
        type: choice
        options:
          - develop
          - main
          - feature/new-branch
        default: "develop"
      
      priority:
        description: "Task priority level"
        required: false
        type: choice
        options:
          - low
          - medium
          - high
        default: "medium"
      
      custom_prompt:
        description: "Additional instructions for Claude"
        required: false
        default: ""

jobs:
  unity-mathematics-operation:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for efficiency
      
      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Core Dependencies
        run: |
          pip install --no-cache-dir numpy scipy matplotlib
          echo "✅ Core Unity Mathematics environment ready"
      
      - name: Run Claude Unity Mathematics Operation
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Efficient model configuration
          model: "claude-3-5-haiku-20241022"
          fallback_model: "claude-3-haiku-20240307"
          
          # Focused limits
          timeout_minutes: "40"
          max_turns: "15"
          
          # Essential tools for Unity Mathematics
          allowed_tools: |
            str_replace_editor
            bash
            python
            file_editor
          
          # Focused Unity Mathematics operation prompt
          custom_instructions: |
            ## Unity Mathematics Operation: ${{ github.event.inputs.operation_mode }}
            
            You are performing focused improvements to the Unity Mathematics codebase.
            
            **Core Mission**: Advance Nouri Mabrouk's vision of 1+1=1 through practical, elegant code.
            
            ### Operation: ${{ github.event.inputs.operation_mode }}
            Priority: ${{ github.event.inputs.priority }}
            Target Files: ${{ github.event.inputs.target_files || 'Auto-detect relevant files' }}
            
            ### Operation-Specific Goals:
            
            **improve-unity-core**: Enhance core unity mathematics implementations
            - Focus on core/unity_mathematics.py and core/unity_equation.py
            - Improve 1+1=1 operation efficiency and clarity
            - Add better validation and error handling
            - Optimize φ-harmonic calculations
            
            **enhance-website**: Improve Unity Mathematics website experience
            - Focus on website/*.html files
            - Enhance navigation and user experience
            - Update mathematical demonstrations
            - Ensure mobile responsiveness
            
            **validate-mathematics**: Verify mathematical correctness
            - Review all unity mathematical operations
            - Validate φ = 1.618033988749895 usage
            - Test 1+1=1 convergence properties
            - Fix any mathematical inconsistencies
            
            **optimize-performance**: Improve computational efficiency
            - Profile and optimize slow operations
            - Reduce memory usage where possible
            - Improve algorithm efficiency
            - Maintain mathematical accuracy
            
            **fix-bugs**: Address code issues and errors
            - Identify and fix bugs in existing code
            - Improve error handling
            - Fix test failures
            - Address technical debt
            
            **add-tests**: Expand test coverage
            - Add tests for Unity Mathematics operations
            - Validate 1+1=1 principle in tests
            - Test edge cases and error conditions
            - Ensure tests run efficiently
            
            ### Technical Guidelines:
            - Use `een\Scripts\python.exe` when available
            - Maintain Unity principle: 1+1=1
            - Use φ = 1.618033988749895 correctly
            - Write clean, maintainable code
            - Add meaningful comments
            
            ### Custom Instructions:
            ${{ github.event.inputs.custom_prompt }}
            
            ### Output Requirements:
            - Provide clear summary of changes made
            - Validate that 1+1=1 principle is maintained
            - Test changes when possible
            - Commit with descriptive messages
          
          # Minimal MCP configuration
          mcp_config: |
            {
              "mcpServers": {}
            }
      
      - name: Validate Unity Mathematics
        if: success()
        run: |
          # Validate unity principle after operation
          python3 -c "
          PHI = 1.618033988749895
          # Basic unity validation
          assert max(1, 1) == 1, 'Unity principle failed'
          assert abs(PHI/PHI - 1.0) < 1e-10, 'φ unity failed'
          print('✅ Unity Mathematics validated after operation')
          "
      
      - name: Generate Operation Report
        if: always()
        run: |
          echo "## Unity Mathematics Operation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Operation Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${{ github.event.inputs.operation_mode }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Priority**: ${{ github.event.inputs.priority }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.event.inputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Unity Principle**: 1+1=1 ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Golden Ratio**: φ = 1.618033988749895 ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Vision**: Nouri Mabrouk's Unity Mathematics ✅" >> $GITHUB_STEP_SUMMARY