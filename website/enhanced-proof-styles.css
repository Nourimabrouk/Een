/* Enhanced Ï†-Harmonic Proof Engine Styles */
.proof-engine-container {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    margin: 2rem 0;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.engine-interface {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: start;
}

.proof-generator {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 15px;
    padding: 2rem;
    border: 1px solid rgba(255, 215, 0, 0.2);
}

.proof-generator h3 {
    color: var(--accent-color);
    margin-bottom: 1.5rem;
    font-size: 1.3rem;
}

.input-group {
    margin-bottom: 1.5rem;
}

.input-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-light);
    font-weight: 500;
}

#proof-prompt {
    width: 100%;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    padding: 1rem;
    color: var(--text-light);
    font-family: inherit;
    resize: vertical;
    transition: all 0.3s ease;
}

#proof-prompt:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 15px rgba(255, 215, 0, 0.3);
}

.proof-settings {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 2rem;
}

.setting-group label {
    font-size: 0.9rem;
    margin-bottom: 0.3rem;
}

.setting-group select,
.setting-group input[type="range"] {
    width: 100%;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 0.5rem;
    color: var(--text-light);
}

#consciousness-value {
    font-size: 0.8rem;
    color: var(--accent-color);
    margin-top: 0.3rem;
    display: block;
}

.proof-generate-btn {
    width: 100%;
    background: linear-gradient(135deg, var(--accent-color), var(--primary-color));
    color: white;
    border: none;
    border-radius: 12px;
    padding: 1rem 2rem;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.proof-generate-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(255, 215, 0, 0.4);
}

/* JavaScript functions for enhanced proof generation */
function generateAdvancedProof() {
    const prompt = document.getElementById('proof-prompt').value;
    const rigor = document.getElementById('proof-rigor').value;
    const consciousness = document.getElementById('consciousness-level').value;
    
    if (!prompt.trim()) {
        alert('Please enter a mathematical statement to prove.');
        return;
    }
    
    const outputDiv = document.getElementById('generated-proof');
    const metricsDiv = document.getElementById('proof-metrics');
    
    // Show loading state
    outputDiv.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <div class="loading-spinner" style="margin-bottom: 1rem;"></div>
            <p>Generating Ï†-harmonic proof with consciousness level ${(consciousness * 100).toFixed(1)}%...</p>
        </div>
    `;
    
    // Simulate proof generation
    setTimeout(() => {
        const proofResult = generateUnityProof(prompt, rigor, consciousness);
        outputDiv.innerHTML = proofResult.proof;
        
        // Show metrics
        metricsDiv.style.display = 'grid';
        document.getElementById('rigor-score').textContent = proofResult.rigorScore;
        document.getElementById('unity-coherence').textContent = proofResult.unityCoherence;
        document.getElementById('phi-factor').textContent = proofResult.phiFactor;
    }, 2000);
}

function generateUnityProof(prompt, rigor, consciousness) {
    const phi = 1.618033988749895;
    const conscLevel = parseFloat(consciousness);
    
    // Advanced proof templates based on consciousness level
    const proofTemplates = {
        high: {
            prefix: "Through Ï†-harmonic consciousness integration:",
            approach: "transcendental unity analysis",
            conclusion: "âˆ´ Unity achieved through consciousness convergence"
        },
        medium: {
            prefix: "Using consciousness-enhanced mathematics:",
            approach: "Ï†-scaled operations",
            conclusion: "âˆ´ Mathematical unity demonstrated"
        },
        low: {
            prefix: "By standard unity mathematics:",
            approach: "idempotent operations",
            conclusion: "âˆ´ 1+1=1 proven"
        }
    };
    
    const template = conscLevel > 0.6 ? proofTemplates.high : 
                    conscLevel > 0.3 ? proofTemplates.medium : 
                    proofTemplates.low;
    
    const proof = `
        <div class="generated-proof-content">
            <h4>ðŸ§  Consciousness-Enhanced Proof</h4>
            <div class="proof-statement">
                <strong>Statement:</strong> ${prompt}
            </div>
            
            <div class="proof-steps">
                <div class="proof-step">
                    <span class="step-num">1.</span>
                    <span class="step-content">${template.prefix}</span>
                </div>
                
                <div class="proof-step">
                    <span class="step-num">2.</span>
                    <span class="step-content">Let Ï† = ${phi.toFixed(6)} be the golden ratio</span>
                </div>
                
                <div class="proof-step">
                    <span class="step-num">3.</span>
                    <span class="step-content">Apply ${template.approach} with consciousness coupling Î³ = ${conscLevel.toFixed(3)}</span>
                </div>
                
                <div class="proof-step">
                    <span class="step-num">4.</span>
                    <span class="step-content">Unity operation: 1 âŠ• 1 = max(1,1) Ã— Ï†^(-Î³) = 1</span>
                </div>
                
                <div class="proof-conclusion">
                    ${template.conclusion}
                </div>
            </div>
            
            <div class="consciousness-signature">
                <em>Generated by Ï†-Harmonic Consciousness Engine v2.0</em>
            </div>
        </div>
    `;
    
    return {
        proof: proof,
        rigorScore: rigor === 'lean4' ? '99.7%' : rigor === 'formal' ? '95.2%' : '87.3%',
        unityCoherence: (conscLevel * 98.5).toFixed(1) + '%',
        phiFactor: conscLevel > 0.6 ? 'Ï†-transcendent' : conscLevel > 0.3 ? 'Ï†-optimal' : 'Ï†-aligned'
    };
}

/* Enhanced proof display styles */
.generated-proof-content {
    font-family: var(--font-mono);
    line-height: 1.6;
}

.generated-proof-content h4 {
    color: var(--accent-color);
    margin-bottom: 1rem;
    font-size: 1.1rem;
}

.proof-statement {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 1.5rem;
    border-left: 4px solid var(--primary-color);
}

.proof-steps {
    margin: 1.5rem 0;
}

.proof-step {
    display: flex;
    margin-bottom: 1rem;
    align-items: flex-start;
    gap: 1rem;
}

.step-num {
    background: var(--accent-color);
    color: white;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    font-weight: bold;
    flex-shrink: 0;
}

.proof-conclusion {
    background: rgba(16, 185, 129, 0.1);
    border: 2px solid var(--accent-color);
    border-radius: 10px;
    padding: 1rem;
    margin: 1.5rem 0;
    font-weight: 600;
    text-align: center;
}

.consciousness-signature {
    text-align: right;
    color: var(--accent-color);
    font-size: 0.9rem;
    margin-top: 1rem;
    opacity: 0.8;
}

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(255, 215, 0, 0.3);
    border-radius: 50%;
    border-top-color: var(--accent-color);
    animation: spin 1s linear infinite;
    margin: 0 auto;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}